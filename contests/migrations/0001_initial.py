# Generated by Django 5.2.1 on 2025-10-13 02:03

import django.db.models.deletion
import simple_history.models
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Contest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("short_description", models.CharField(max_length=500)),
                ("description", tinymce.models.HTMLField()),
                ("image", models.ImageField(upload_to="contests/")),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("EASY", "Easy"),
                            ("MEDIUM", "Medium"),
                            ("HARD", "Hard"),
                        ],
                        max_length=20,
                    ),
                ),
                ("platform", models.CharField(max_length=200)),
                ("platform_link", models.URLField(blank=True, null=True)),
                (
                    "participants",
                    models.CharField(
                        blank=True,
                        help_text="Number of participants",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "max_participants",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of participants",
                        null=True,
                    ),
                ),
                ("registration_link", models.URLField(blank=True, null=True)),
                ("registration_deadline", models.DateTimeField(blank=True, null=True)),
                ("organizer", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PUBLISHED", "Published"),
                            ("ARCHIVED", "Archived"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalContest",
            fields=[
                ("id", models.UUIDField(blank=True, db_index=True, editable=False)),
                ("title", models.CharField(max_length=200)),
                ("short_description", models.CharField(max_length=500)),
                ("description", tinymce.models.HTMLField()),
                ("image", models.TextField(max_length=100)),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("EASY", "Easy"),
                            ("MEDIUM", "Medium"),
                            ("HARD", "Hard"),
                        ],
                        max_length=20,
                    ),
                ),
                ("platform", models.CharField(max_length=200)),
                ("platform_link", models.URLField(blank=True, null=True)),
                (
                    "participants",
                    models.CharField(
                        blank=True,
                        help_text="Number of participants",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "max_participants",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of participants",
                        null=True,
                    ),
                ),
                ("registration_link", models.URLField(blank=True, null=True)),
                ("registration_deadline", models.DateTimeField(blank=True, null=True)),
                ("organizer", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PUBLISHED", "Published"),
                            ("ARCHIVED", "Archived"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical contest",
                "verbose_name_plural": "historical contests",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPrize",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="1st prize, 2nd prize, 3rd prize, etc.",
                        max_length=200,
                    ),
                ),
                ("amount", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "contest",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contests.contest",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical prize",
                "verbose_name_plural": "historical prizes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Prize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="1st prize, 2nd prize, 3rd prize, etc.",
                        max_length=200,
                    ),
                ),
                ("amount", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contests.contest",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
